generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model admin_sessions {
  id         Int      @id(map: "admin sessions_pk") @default(autoincrement())
  adminId    Int
  token      String      @unique
  created_at DateTime @default(dbgenerated("'2023-02-20 20:52:52.582861'::timestamp without time zone")) @db.Timestamp(6)
  admins     admins   @relation(fields: [adminId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "admin-sessions_fk0")

  @@map("admin-sessions")
}

model admins {
  id             Int              @id(map: "admins_pk") @default(autoincrement())
  cpf            String           @unique @db.VarChar(11)
  email          String           @unique
  name           String
  photo          String
  birthDay       DateTime         @db.Date
  password       String
  created_at     DateTime         @default(dbgenerated("'2023-02-20 20:52:52.184845'::timestamp without time zone")) @db.Timestamp(6)
  admin_sessions admin_sessions[]
  posts          posts[]
}

model contact {
  id         Int      @id(map: "contact_pk") @default(autoincrement())
  name       String?
  email      String
  telephone  String?  @db.VarChar(15)
  mesage     String
  userId     Int?
  created_at DateTime @default(dbgenerated("'2023-02-20 20:52:47.743421'::timestamp without time zone")) @db.Timestamp(6)
  users      users?   @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "contact_fk0")
}

model donates {
  id             Int      @id(map: "donates_pk") @default(autoincrement())
  userId         Int
  telephone      String   @unique @db.VarChar(15)
  genderIdentity String
  pronouns       String
  created_at     DateTime @default(dbgenerated("'2023-02-20 20:52:48.223772'::timestamp without time zone")) @db.Timestamp(6)
  users          users    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "donates_fk0")
}

model genders {
  id         Int      @id(map: "genders_pk") @default(autoincrement())
  name       String   @unique
  created_at DateTime @default(dbgenerated("'2023-02-20 20:52:50.647291'::timestamp without time zone")) @db.Timestamp(6)
}

model likes {
  id         Int      @id(map: "likes_pk") @default(autoincrement())
  postId     Int
  userId     Int
  created_at DateTime @default(dbgenerated("'2023-02-20 20:52:51.413162'::timestamp without time zone")) @db.Timestamp(6)
  posts      posts    @relation(fields: [postId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "likes_fk0")
  users      users    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "likes_fk1")
}

model newsletter {
  id         Int      @id(map: "newsLetter_pk") @default(autoincrement())
  email      String   @unique
  created_at DateTime @default(dbgenerated("'2023-02-20 20:52:46.943014'::timestamp without time zone")) @db.Timestamp(6)
}

model offices {
  id         Int          @id(map: "offices_pk") @default(autoincrement())
  name       String       @unique
  created_at DateTime     @default(dbgenerated("'2023-02-20 20:52:49.388608'::timestamp without time zone")) @db.Timestamp(6)
  volunteers volunteers[]
}

model posts {
  id         Int      @id(map: "posts_pk") @default(autoincrement())
  adminId    Int
  text       String
  image      String
  created_at DateTime @default(dbgenerated("'2023-02-20 20:52:51.701391'::timestamp without time zone")) @db.Timestamp(6)
  likes      likes[]
  admins     admins   @relation(fields: [adminId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "posts_fk0")
}

model sessions {
  id         Int      @id(map: "sessions_pk") @default(autoincrement())
  userId     Int
  token      String      @unique
  created_at DateTime @default(dbgenerated("'2023-02-20 20:52:47.90155'::timestamp without time zone")) @db.Timestamp(6)
  users      users    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "sessions_fk0")
}

model skincolor {
  id         Int      @id(map: "skinColor_pk") @default(autoincrement())
  name       String   @unique
  created_at DateTime @default(dbgenerated("'2023-02-20 20:52:50.124464'::timestamp without time zone")) @db.Timestamp(6)
}

model usergender {
  id         Int      @id(map: "userGender_pk") @default(autoincrement())
  userId     Int
  genderId   Int
  created_at DateTime @default(dbgenerated("'2023-02-20 20:52:49.129336'::timestamp without time zone")) @db.Timestamp(6)
}

model users {
  id         Int          @id(map: "users_pk") @default(autoincrement())
  email      String       @unique
  name       String
  birthDay   DateTime     @db.Date
  password   String
  created_at DateTime     @default(dbgenerated("'2023-02-20 20:52:45.88081'::timestamp without time zone")) @db.Timestamp(6)
  contact    contact[]
  donates    donates[]
  likes      likes[]
  sessions   sessions[]
  volunteers volunteers[]
}

model volunteers {
  id              Int      @id(map: "volunteers_pk") @default(autoincrement())
  userId          Int
  telephone       String   @unique @db.VarChar(15)
  linkedIn        String?
  pronouns        String
  irisParticipant Boolean
  occupation      String
  skinColorId     Int
  officeId        Int
  aplyingReason   String
  experience      String
  created_at      DateTime @default(dbgenerated("'2023-02-20 20:52:48.765658'::timestamp without time zone")) @db.Timestamp(6)
  users           users    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "volunteers_fk0")
  offices         offices  @relation(fields: [officeId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "volunteers_fk2")
}
